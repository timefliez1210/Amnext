{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\pages\\\\ref\\\\[id].js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import { useRouter } from \"next/router\";\nimport { withRouter } from \"next/router\";\nimport React, { Component } from \"react\";\n\nvar RefLink = /*#__PURE__*/function (_Component) {\n  _inherits(RefLink, _Component);\n\n  var _super = _createSuper(RefLink);\n\n  function RefLink() {\n    _classCallCheck(this, RefLink);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RefLink, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 12\n        }\n      }, \"Hello, \", this.props.router.pathname);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var pathname = _ref.pathname;\n      return {\n        pathname: pathname\n      };\n    }\n  }]);\n\n  return RefLink;\n}(Component);\n\nexport default RefLink;","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/pages/ref/[id].js"],"names":["withRouter","React","Component","RefLink","props","router","pathname"],"mappings":";;;;;;;;;;;;AAAA;AACA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;6BAKK;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,QAA7B,CAAP;AACD;;;0CANoC;AAAA,UAAZA,QAAY,QAAZA,QAAY;AACnC,aAAO;AAAEA,QAAAA,QAAQ,EAARA;AAAF,OAAP;AACD;;;;EAHmBJ,S;;AAUtB,eAAeC,OAAf","sourcesContent":["// import { useRouter } from \"next/router\";\r\nimport { withRouter } from \"next/router\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass RefLink extends Component {\r\n  static getInitialProps({ pathname }) {\r\n    return { pathname };\r\n  }\r\n\r\n  render() {\r\n    return <p>Hello, {this.props.router.pathname}</p>;\r\n  }\r\n}\r\n\r\nexport default RefLink;\r\n"]},"metadata":{},"sourceType":"module"}