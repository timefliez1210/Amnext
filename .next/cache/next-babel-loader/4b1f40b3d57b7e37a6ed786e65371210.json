{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\components\\\\sidebar\\\\UserContent.jsx\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\n\nvar UserContent = function UserContent(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      copySuccess = _useState[0],\n      setCopySuccess = _useState[1];\n\n  var textAreaRef = useRef(null);\n\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand(\"copy\"); // This is just personal preference.\n    // I prefer to not show the whole text area selected.\n\n    e.target.focus();\n    setCopySuccess(\"Copied!\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2941962741\" + \" \" + \"content-user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"h4\", {\n    className: \"jsx-2941962741\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.title), __jsx(\"input\", {\n    ref: function ref(inputfield) {\n      return inputField = inputfield;\n    },\n    type: \"text\",\n    disabled: \"disabled\",\n    placeholder: props.placeholder,\n    value: props.placeholder,\n    className: \"jsx-2941962741\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    className: \"jsx-2941962741\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }),\n  /* Logical shortcut for only displaying the \r\n  button if the copy command exists */\n  document.queryCommandSupported(\"copy\") && __jsx(\"div\", {\n    className: \"jsx-2941962741\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: copyToClipboard,\n    className: \"jsx-2941962741\" + \" \" + \"copy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Copy\"), copySuccess), __jsx(\"button\", {\n    className: \"jsx-2941962741\" + \" \" + \"etherscan\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"To Etherscan\")), __jsx(\"form\", {\n    className: \"jsx-2941962741\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"textarea\", {\n    ref: textAreaRef,\n    value: \"Some text to copy\",\n    className: \"jsx-2941962741\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"2941962741\",\n    __self: _this\n  }, \"h4.jsx-2941962741{margin-top:5px;}.content-user.jsx-2941962741{background:rgba(16,1,62,1);width:90%;padding:10px 10px;margin:20px auto;border-radius:20px;text-align:center;}input.jsx-2941962741{width:auto;margin:10px auto;text-align:center;padding:5px 10px;overflow:auto;border-radius:10px;background:#271950;border:none;}input.jsx-2941962741::-webkit-input-placeholder{color:white;}input.jsx-2941962741::-moz-placeholder{color:white;}input.jsx-2941962741:-ms-input-placeholder{color:white;}input.jsx-2941962741::placeholder{color:white;}input.jsx-2941962741::disabled{background:#271950;}button.jsx-2941962741{margin:10px 15px;border:none;color:white;border-radius:10px;padding:10px 25px;}.copy.jsx-2941962741{background:rgb(31,168,255);background:linear-gradient( 223deg, rgba(31,168,255,1) 22%, rgba(19,108,255,1) 47% );}.etherscan.jsx-2941962741{background:#271950;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY3JmYWJcXERlc2t0b3BcXGZvcnNhZ2UtYm9pbGVycGxhdGVcXGNvbXBvbmVudHNcXHNpZGViYXJcXFVzZXJDb250ZW50LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Q2tCLEFBRzBCLEFBR2UsQUFRbkIsQUFVQyxBQUdPLEFBR0YsQUFPWSxBQVFWLFdBOUJGLENBVW5CLEdBckJBLEVBMkJjLEVBSGQsQUFrQkEsUUF2Q1ksQUFtQ1QsQ0ExQmlCLENBZ0JOLFFBeEJNLElBeUJDLEtBaEJGLFNBUkEsS0F5QkMsR0FoQkosU0FSSyxLQVNBLENBZ0JyQixhQXhCb0IsS0FTQyxhQVJyQixHQStCQSxHQXRCYyxZQUNkIiwiZmlsZSI6IkM6XFxVc2Vyc1xcY3JmYWJcXERlc2t0b3BcXGZvcnNhZ2UtYm9pbGVycGxhdGVcXGNvbXBvbmVudHNcXHNpZGViYXJcXFVzZXJDb250ZW50LmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5jb25zdCBVc2VyQ29udGVudCA9IChwcm9wcykgPT4ge1xyXG4gIGNvbnN0IFtjb3B5U3VjY2Vzcywgc2V0Q29weVN1Y2Nlc3NdID0gdXNlU3RhdGUoXCJcIik7XHJcbiAgY29uc3QgdGV4dEFyZWFSZWYgPSB1c2VSZWYobnVsbCk7XHJcbiAgZnVuY3Rpb24gY29weVRvQ2xpcGJvYXJkKGUpIHtcclxuICAgIHRleHRBcmVhUmVmLmN1cnJlbnQuc2VsZWN0KCk7XHJcbiAgICBkb2N1bWVudC5leGVjQ29tbWFuZChcImNvcHlcIik7XHJcbiAgICAvLyBUaGlzIGlzIGp1c3QgcGVyc29uYWwgcHJlZmVyZW5jZS5cclxuICAgIC8vIEkgcHJlZmVyIHRvIG5vdCBzaG93IHRoZSB3aG9sZSB0ZXh0IGFyZWEgc2VsZWN0ZWQuXHJcbiAgICBlLnRhcmdldC5mb2N1cygpO1xyXG4gICAgc2V0Q29weVN1Y2Nlc3MoXCJDb3BpZWQhXCIpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudC11c2VyXCI+XHJcbiAgICAgICAgPGg0Pntwcm9wcy50aXRsZX08L2g0PlxyXG4gICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgcmVmPXsoaW5wdXRmaWVsZCkgPT4gKGlucHV0RmllbGQgPSBpbnB1dGZpZWxkKX1cclxuICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgIGRpc2FibGVkPVwiZGlzYWJsZWRcIlxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI9e3Byb3BzLnBsYWNlaG9sZGVyfVxyXG4gICAgICAgICAgdmFsdWU9e3Byb3BzLnBsYWNlaG9sZGVyfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPGJyIC8+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgLyogTG9naWNhbCBzaG9ydGN1dCBmb3Igb25seSBkaXNwbGF5aW5nIHRoZSBcclxuICAgICAgICAgIGJ1dHRvbiBpZiB0aGUgY29weSBjb21tYW5kIGV4aXN0cyAqL1xyXG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlDb21tYW5kU3VwcG9ydGVkKFwiY29weVwiKSAmJiAoXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJjb3B5XCIgb25DbGljaz17Y29weVRvQ2xpcGJvYXJkfT5cclxuICAgICAgICAgICAgICAgIENvcHlcclxuICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICB7Y29weVN1Y2Nlc3N9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgKVxyXG4gICAgICAgIH1cclxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImV0aGVyc2NhblwiPlRvIEV0aGVyc2NhbjwvYnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICAgIDxmb3JtPlxyXG4gICAgICAgIDx0ZXh0YXJlYSByZWY9e3RleHRBcmVhUmVmfSB2YWx1ZT1cIlNvbWUgdGV4dCB0byBjb3B5XCIgLz5cclxuICAgICAgPC9mb3JtPlxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgaDQge1xyXG4gICAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuY29udGVudC11c2VyIHtcclxuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTYsIDEsIDYyLCAxKTtcclxuICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XHJcbiAgICAgICAgICBtYXJnaW46IDIwcHggYXV0bztcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlucHV0IHtcclxuICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgbWFyZ2luOiAxMHB4IGF1dG87XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgICAgICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICAgIGJhY2tncm91bmQ6ICMyNzE5NTA7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlucHV0OjpwbGFjZWhvbGRlciB7XHJcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlucHV0OjpkaXNhYmxlZCB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjMjcxOTUwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgbWFyZ2luOiAxMHB4IDE1cHg7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgICAgcGFkZGluZzogMTBweCAyNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuY29weSB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoMzEsIDE2OCwgMjU1KTtcclxuICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgICAgMjIzZGVnLFxyXG4gICAgICAgICAgICByZ2JhKDMxLCAxNjgsIDI1NSwgMSkgMjIlLFxyXG4gICAgICAgICAgICByZ2JhKDE5LCAxMDgsIDI1NSwgMSkgNDclXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZXRoZXJzY2FuIHtcclxuICAgICAgICAgIGJhY2tncm91bmQ6ICMyNzE5NTA7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckNvbnRlbnQ7XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\sidebar\\\\\\\\UserContent.jsx */\"));\n};\n\n_s(UserContent, \"kksiMRHFS5EhLBnkQUJH0tKU5No=\");\n\n_c = UserContent;\nexport default UserContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContent\");","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/components/sidebar/UserContent.jsx"],"names":["React","useRef","useState","UserContent","props","copySuccess","setCopySuccess","textAreaRef","copyToClipboard","e","current","select","document","execCommand","target","focus","title","inputfield","inputField","placeholder","queryCommandSupported"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACSF,QAAQ,CAAC,EAAD,CADjB;AAAA,MACtBG,WADsB;AAAA,MACTC,cADS;;AAE7B,MAAMC,WAAW,GAAGN,MAAM,CAAC,IAAD,CAA1B;;AACA,WAASO,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BF,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,MAApB;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB,EAF0B,CAG1B;AACA;;AACAJ,IAAAA,CAAC,CAACK,MAAF,CAASC,KAAT;AACAT,IAAAA,cAAc,CAAC,SAAD,CAAd;AACD;;AAED,SACE,4BACE;AAAA,wCAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACY,KAAX,CADF,EAEE;AACE,IAAA,GAAG,EAAE,aAACC,UAAD;AAAA,aAAiBC,UAAU,GAAGD,UAA9B;AAAA,KADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAC,UAHX;AAIE,IAAA,WAAW,EAAEb,KAAK,CAACe,WAJrB;AAKE,IAAA,KAAK,EAAEf,KAAK,CAACe,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF;AAWI;;AAEAP,EAAAA,QAAQ,CAACQ,qBAAT,CAA+B,MAA/B,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAyB,IAAA,OAAO,EAAEZ,eAAlC;AAAA,wCAAkB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGH,WAJH,CAdN,EAsBE;AAAA,wCAAkB,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBF,CADF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,GAAG,EAAEE,WAAf;AAA4B,IAAA,KAAK,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1BF;AAAA;AAAA;AAAA,6tKADF;AA+ED,CA3FD;;GAAMJ,W;;KAAAA,W;AA6FN,eAAeA,WAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nconst UserContent = (props) => {\r\n  const [copySuccess, setCopySuccess] = useState(\"\");\r\n  const textAreaRef = useRef(null);\r\n  function copyToClipboard(e) {\r\n    textAreaRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    // This is just personal preference.\r\n    // I prefer to not show the whole text area selected.\r\n    e.target.focus();\r\n    setCopySuccess(\"Copied!\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-user\">\r\n        <h4>{props.title}</h4>\r\n        <input\r\n          ref={(inputfield) => (inputField = inputfield)}\r\n          type=\"text\"\r\n          disabled=\"disabled\"\r\n          placeholder={props.placeholder}\r\n          value={props.placeholder}\r\n        />\r\n        <br />\r\n        {\r\n          /* Logical shortcut for only displaying the \r\n          button if the copy command exists */\r\n          document.queryCommandSupported(\"copy\") && (\r\n            <div>\r\n              <button className=\"copy\" onClick={copyToClipboard}>\r\n                Copy\r\n              </button>\r\n              {copySuccess}\r\n            </div>\r\n          )\r\n        }\r\n        <button className=\"etherscan\">To Etherscan</button>\r\n      </div>\r\n\r\n      <form>\r\n        <textarea ref={textAreaRef} value=\"Some text to copy\" />\r\n      </form>\r\n      <style jsx>{`\r\n        h4 {\r\n          margin-top: 5px;\r\n        }\r\n        .content-user {\r\n          background: rgba(16, 1, 62, 1);\r\n          width: 90%;\r\n          padding: 10px 10px;\r\n          margin: 20px auto;\r\n          border-radius: 20px;\r\n          text-align: center;\r\n        }\r\n        input {\r\n          width: auto;\r\n          margin: 10px auto;\r\n          text-align: center;\r\n          padding: 5px 10px;\r\n          overflow: auto;\r\n          border-radius: 10px;\r\n          background: #271950;\r\n          border: none;\r\n        }\r\n        input::placeholder {\r\n          color: white;\r\n        }\r\n        input::disabled {\r\n          background: #271950;\r\n        }\r\n        button {\r\n          margin: 10px 15px;\r\n          border: none;\r\n          color: white;\r\n          border-radius: 10px;\r\n          padding: 10px 25px;\r\n        }\r\n        .copy {\r\n          background: rgb(31, 168, 255);\r\n          background: linear-gradient(\r\n            223deg,\r\n            rgba(31, 168, 255, 1) 22%,\r\n            rgba(19, 108, 255, 1) 47%\r\n          );\r\n        }\r\n        .etherscan {\r\n          background: #271950;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserContent;\r\n"]},"metadata":{},"sourceType":"module"}