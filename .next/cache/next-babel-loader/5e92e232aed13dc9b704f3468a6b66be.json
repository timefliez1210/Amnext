{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\components\\\\login\\\\AutoLogin.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, ADDRESS } from \"../../ethereum/web3\";\nimport Router from \"next/router\";\nimport AccountContext from \"../AccountContext\";\nimport { loadWeb3 } from \"../../utils/utility\";\n\nclass AutoLogin extends Component {\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const contract = new web3.eth.Contract(ABI, ADDRESS);\n    this.setState({\n      contract\n    });\n    const isExists = await contract.methods.isUserExists(this.state.account).call();\n    this.setState({\n      isExist: isExists\n    });\n    const costs = await contract.methods.registrationCost().call();\n    this.setState({\n      cost: costs\n    });\n    this.setState({\n      isLoading: false\n    });\n  } // async loadWeb3() {\n  //   if (window.ethereum) {\n  //     window.web3 = new Web3(window.ethereum);\n  //     await window.ethereum.enable();\n  //   } else if (window.web3) {\n  //     window.web3 = new Web3(window.web3.currentProvider);\n  //   } else {\n  //     window.alert(\n  //       \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n  //     );\n  //   }\n  // }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      isExist: false,\n      cost: \"\",\n      loading: false,\n      refererAddress: \"0xf2aA26723ed7b099845afE69FA4929A46BC00245\"\n    };\n  }\n\n  async register(_refererAddress) {\n    this.setState({\n      loading: true\n    });\n    await loadWeb3();\n    await this.loadBlockchainData();\n\n    if (this.state.isExist) {\n      Router.push(\"/dashboard\");\n      this.setState({\n        loading: false\n      });\n    } else {\n      await this.state.contract.methods.registrationExt(_refererAddress).send({\n        value: this.state.cost,\n        from: this.state.account\n      }).then(function (receipt) {\n        Router.push(\"/dashboard\");\n        this.setState({\n          loading: false\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      account,\n      setAccount\n    } = this.context;\n    const isLoading = this.state.loading;\n    return __jsx(React.Fragment, null, __jsx(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        await this.register(this.state.refererAddress);\n        const newUser = this.state.account;\n        setAccount(newUser);\n      },\n      className: \"jsx-585742509\" + \" \" + \"automatic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: \"jsx-585742509\" + \" \" + \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, !isLoading ? __jsx(\"b\", {\n      className: \"jsx-585742509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }\n    }, \"Authorisation\") : __jsx(\"b\", {\n      className: \"jsx-585742509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 50\n      }\n    }, \"Loading\"))), __jsx(_JSXStyle, {\n      id: \"585742509\",\n      __self: this\n    }, \".auto.jsx-585742509{background:rgb(0,237,47);background:linear-gradient( 306deg, rgba(0,237,47,1) 29%, rgba(0,179,35,1) 64%, rgba(0,179,35,1) 83% );box-shadow:none;outline:none;border:none;}button.jsx-585742509{width:100%;text-align:center;padding:20px 0;border-radius:30px;color:white;font-size:1.2em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY3JmYWJcXERlc2t0b3BcXGZvcnNhZ2UtYm9pbGVycGxhdGVcXGNvbXBvbmVudHNcXGxvZ2luXFxBdXRvTG9naW4uanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdGb0IsQUFHd0MsQUFZaEIsV0FDTyxjQVBqQixJQVFjLGVBQ0ksbUJBQ1AsWUFDSSxnQkFDbEIscUNBWGtCLGdCQUNILGFBQ0QsWUFDZCIsImZpbGUiOiJDOlxcVXNlcnNcXGNyZmFiXFxEZXNrdG9wXFxmb3JzYWdlLWJvaWxlcnBsYXRlXFxjb21wb25lbnRzXFxsb2dpblxcQXV0b0xvZ2luLmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFdlYjMgZnJvbSBcIndlYjNcIjtcclxuaW1wb3J0IHsgQUJJLCBBRERSRVNTIH0gZnJvbSBcIi4uLy4uL2V0aGVyZXVtL3dlYjNcIjtcclxuaW1wb3J0IFJvdXRlciBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcclxuaW1wb3J0IEFjY291bnRDb250ZXh0IGZyb20gXCIuLi9BY2NvdW50Q29udGV4dFwiO1xyXG5pbXBvcnQgeyBsb2FkV2ViMyB9IGZyb20gXCIuLi8uLi91dGlscy91dGlsaXR5XCI7XHJcblxyXG5jbGFzcyBBdXRvTG9naW4gZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIHN0YXRpYyBjb250ZXh0VHlwZSA9IEFjY291bnRDb250ZXh0O1xyXG5cclxuICBhc3luYyBsb2FkQmxvY2tjaGFpbkRhdGEoKSB7XHJcbiAgICBjb25zdCB3ZWIzID0gbmV3IFdlYjMoV2ViMy5naXZlblByb3ZpZGVyIHx8IFwiaHR0cDovL2xvY2FsaG9zdDo4NTQ1XCIpO1xyXG4gICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCB3ZWIzLmV0aC5nZXRBY2NvdW50cygpO1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IGFjY291bnQ6IGFjY291bnRzWzBdIH0pO1xyXG5cclxuICAgIGNvbnN0IGNvbnRyYWN0ID0gbmV3IHdlYjMuZXRoLkNvbnRyYWN0KEFCSSwgQUREUkVTUyk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgY29udHJhY3QgfSk7XHJcbiAgICBjb25zdCBpc0V4aXN0cyA9IGF3YWl0IGNvbnRyYWN0Lm1ldGhvZHNcclxuICAgICAgLmlzVXNlckV4aXN0cyh0aGlzLnN0YXRlLmFjY291bnQpXHJcbiAgICAgIC5jYWxsKCk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgaXNFeGlzdDogaXNFeGlzdHMgfSk7XHJcbiAgICBjb25zdCBjb3N0cyA9IGF3YWl0IGNvbnRyYWN0Lm1ldGhvZHMucmVnaXN0cmF0aW9uQ29zdCgpLmNhbGwoKTtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBjb3N0OiBjb3N0cyB9KTtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBpc0xvYWRpbmc6IGZhbHNlIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gYXN5bmMgbG9hZFdlYjMoKSB7XHJcbiAgLy8gICBpZiAod2luZG93LmV0aGVyZXVtKSB7XHJcbiAgLy8gICAgIHdpbmRvdy53ZWIzID0gbmV3IFdlYjMod2luZG93LmV0aGVyZXVtKTtcclxuICAvLyAgICAgYXdhaXQgd2luZG93LmV0aGVyZXVtLmVuYWJsZSgpO1xyXG4gIC8vICAgfSBlbHNlIGlmICh3aW5kb3cud2ViMykge1xyXG4gIC8vICAgICB3aW5kb3cud2ViMyA9IG5ldyBXZWIzKHdpbmRvdy53ZWIzLmN1cnJlbnRQcm92aWRlcik7XHJcbiAgLy8gICB9IGVsc2Uge1xyXG4gIC8vICAgICB3aW5kb3cuYWxlcnQoXHJcbiAgLy8gICAgICAgXCJOb24tRXRoZXJldW0gYnJvd3NlciBkZXRlY3RlZC4gWW91IHNob3VsZCBjb25zaWRlciB0cnlpbmcgTWV0YU1hc2shXCJcclxuICAvLyAgICAgKTtcclxuICAvLyAgIH1cclxuICAvLyB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICBhY2NvdW50OiBcIlwiLFxyXG4gICAgICBpc0V4aXN0OiBmYWxzZSxcclxuICAgICAgY29zdDogXCJcIixcclxuICAgICAgbG9hZGluZzogZmFsc2UsXHJcbiAgICAgIHJlZmVyZXJBZGRyZXNzOiBcIjB4ZjJhQTI2NzIzZWQ3YjA5OTg0NWFmRTY5RkE0OTI5QTQ2QkMwMDI0NVwiLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGFzeW5jIHJlZ2lzdGVyKF9yZWZlcmVyQWRkcmVzcykge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IGxvYWRpbmc6IHRydWUgfSk7XHJcbiAgICBhd2FpdCBsb2FkV2ViMygpO1xyXG4gICAgYXdhaXQgdGhpcy5sb2FkQmxvY2tjaGFpbkRhdGEoKTtcclxuICAgIGlmICh0aGlzLnN0YXRlLmlzRXhpc3QpIHtcclxuICAgICAgUm91dGVyLnB1c2goXCIvZGFzaGJvYXJkXCIpO1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHsgbG9hZGluZzogZmFsc2UgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhd2FpdCB0aGlzLnN0YXRlLmNvbnRyYWN0Lm1ldGhvZHNcclxuICAgICAgICAucmVnaXN0cmF0aW9uRXh0KF9yZWZlcmVyQWRkcmVzcylcclxuICAgICAgICAuc2VuZCh7XHJcbiAgICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS5jb3N0LFxyXG4gICAgICAgICAgZnJvbTogdGhpcy5zdGF0ZS5hY2NvdW50LFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlY2VpcHQpIHtcclxuICAgICAgICAgIFJvdXRlci5wdXNoKFwiL2Rhc2hib2FyZFwiKTtcclxuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBsb2FkaW5nOiBmYWxzZSB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBhY2NvdW50LCBzZXRBY2NvdW50IH0gPSB0aGlzLmNvbnRleHQ7XHJcbiAgICBjb25zdCBpc0xvYWRpbmcgPSB0aGlzLnN0YXRlLmxvYWRpbmc7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8PlxyXG4gICAgICAgIDxmb3JtXHJcbiAgICAgICAgICBjbGFzc05hbWU9XCJhdXRvbWF0aWNcIlxyXG4gICAgICAgICAgb25TdWJtaXQ9e2FzeW5jIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBhd2FpdCB0aGlzLnJlZ2lzdGVyKHRoaXMuc3RhdGUucmVmZXJlckFkZHJlc3MpO1xyXG4gICAgICAgICAgICBjb25zdCBuZXdVc2VyID0gdGhpcy5zdGF0ZS5hY2NvdW50O1xyXG4gICAgICAgICAgICBzZXRBY2NvdW50KG5ld1VzZXIpO1xyXG4gICAgICAgICAgfX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImF1dG9cIj5cclxuICAgICAgICAgICAgeyFpc0xvYWRpbmcgPyA8Yj5BdXRob3Jpc2F0aW9uPC9iPiA6IDxiPkxvYWRpbmc8L2I+fVxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgIC5hdXRvIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiKDAsIDIzNywgNDcpO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICAgICAgMzA2ZGVnLFxyXG4gICAgICAgICAgICAgIHJnYmEoMCwgMjM3LCA0NywgMSkgMjklLFxyXG4gICAgICAgICAgICAgIHJnYmEoMCwgMTc5LCAzNSwgMSkgNjQlLFxyXG4gICAgICAgICAgICAgIHJnYmEoMCwgMTc5LCAzNSwgMSkgODMlXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHggMDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgPC8+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXV0b0xvZ2luO1xyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\login\\\\\\\\AutoLogin.jsx */\"));\n  }\n\n}\n\n_defineProperty(AutoLogin, \"contextType\", AccountContext);\n\nexport default AutoLogin;","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/components/login/AutoLogin.jsx"],"names":["React","Component","Web3","ABI","ADDRESS","Router","AccountContext","loadWeb3","AutoLogin","loadBlockchainData","web3","givenProvider","accounts","eth","getAccounts","setState","account","contract","Contract","isExists","methods","isUserExists","state","call","isExist","costs","registrationCost","cost","isLoading","constructor","props","loading","refererAddress","register","_refererAddress","push","registrationExt","send","value","from","then","receipt","render","setAccount","context","event","preventDefault","newUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,qBAA7B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAGhC,QAAMQ,kBAAN,GAA2B;AACzB,UAAMC,IAAI,GAAG,IAAIR,IAAJ,CAASA,IAAI,CAACS,aAAL,IAAsB,uBAA/B,CAAb;AACA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAnB,KAAd;AAEA,UAAMK,QAAQ,GAAG,IAAIP,IAAI,CAACG,GAAL,CAASK,QAAb,CAAsBf,GAAtB,EAA2BC,OAA3B,CAAjB;AACA,SAAKW,QAAL,CAAc;AAAEE,MAAAA;AAAF,KAAd;AACA,UAAME,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAT,CACpBC,YADoB,CACP,KAAKC,KAAL,CAAWN,OADJ,EAEpBO,IAFoB,EAAvB;AAGA,SAAKR,QAAL,CAAc;AAAES,MAAAA,OAAO,EAAEL;AAAX,KAAd;AACA,UAAMM,KAAK,GAAG,MAAMR,QAAQ,CAACG,OAAT,CAAiBM,gBAAjB,GAAoCH,IAApC,EAApB;AACA,SAAKR,QAAL,CAAc;AAAEY,MAAAA,IAAI,EAAEF;AAAR,KAAd;AACA,SAAKV,QAAL,CAAc;AAAEa,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD,GAjB+B,CAmBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKR,KAAL,GAAa;AACXN,MAAAA,OAAO,EAAE,EADE;AAEXQ,MAAAA,OAAO,EAAE,KAFE;AAGXG,MAAAA,IAAI,EAAE,EAHK;AAIXI,MAAAA,OAAO,EAAE,KAJE;AAKXC,MAAAA,cAAc,EAAE;AALL,KAAb;AAOD;;AAED,QAAMC,QAAN,CAAeC,eAAf,EAAgC;AAC9B,SAAKnB,QAAL,CAAc;AAAEgB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMxB,QAAQ,EAAd;AACA,UAAM,KAAKE,kBAAL,EAAN;;AACA,QAAI,KAAKa,KAAL,CAAWE,OAAf,EAAwB;AACtBnB,MAAAA,MAAM,CAAC8B,IAAP,CAAY,YAAZ;AACA,WAAKpB,QAAL,CAAc;AAAEgB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAHD,MAGO;AACL,YAAM,KAAKT,KAAL,CAAWL,QAAX,CAAoBG,OAApB,CACHgB,eADG,CACaF,eADb,EAEHG,IAFG,CAEE;AACJC,QAAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWK,IADd;AAEJY,QAAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWN;AAFb,OAFF,EAMHwB,IANG,CAME,UAAUC,OAAV,EAAmB;AACvBpC,QAAAA,MAAM,CAAC8B,IAAP,CAAY,YAAZ;AACA,aAAKpB,QAAL,CAAc;AAAEgB,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OATG,CAAN;AAUD;AACF;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE1B,MAAAA,OAAF;AAAW2B,MAAAA;AAAX,QAA0B,KAAKC,OAArC;AACA,UAAMhB,SAAS,GAAG,KAAKN,KAAL,CAAWS,OAA7B;AACA,WACE,4BACE;AAEE,MAAA,QAAQ,EAAE,MAAOc,KAAP,IAAiB;AACzBA,QAAAA,KAAK,CAACC,cAAN;AACA,cAAM,KAAKb,QAAL,CAAc,KAAKX,KAAL,CAAWU,cAAzB,CAAN;AACA,cAAMe,OAAO,GAAG,KAAKzB,KAAL,CAAWN,OAA3B;AACA2B,QAAAA,UAAU,CAACI,OAAD,CAAV;AACD,OAPH;AAAA,yCACY,WADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA,yCAAkB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACnB,SAAD,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAb,GAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADvC,CATF,CADF;AAAA;AAAA;AAAA,grLADF;AAuCD;;AAzG+B;;gBAA5BpB,S,iBACiBF,c;;AA2GvB,eAAeE,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { ABI, ADDRESS } from \"../../ethereum/web3\";\r\nimport Router from \"next/router\";\r\nimport AccountContext from \"../AccountContext\";\r\nimport { loadWeb3 } from \"../../utils/utility\";\r\n\r\nclass AutoLogin extends Component {\r\n  static contextType = AccountContext;\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n    const accounts = await web3.eth.getAccounts();\r\n    this.setState({ account: accounts[0] });\r\n\r\n    const contract = new web3.eth.Contract(ABI, ADDRESS);\r\n    this.setState({ contract });\r\n    const isExists = await contract.methods\r\n      .isUserExists(this.state.account)\r\n      .call();\r\n    this.setState({ isExist: isExists });\r\n    const costs = await contract.methods.registrationCost().call();\r\n    this.setState({ cost: costs });\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  // async loadWeb3() {\r\n  //   if (window.ethereum) {\r\n  //     window.web3 = new Web3(window.ethereum);\r\n  //     await window.ethereum.enable();\r\n  //   } else if (window.web3) {\r\n  //     window.web3 = new Web3(window.web3.currentProvider);\r\n  //   } else {\r\n  //     window.alert(\r\n  //       \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      isExist: false,\r\n      cost: \"\",\r\n      loading: false,\r\n      refererAddress: \"0xf2aA26723ed7b099845afE69FA4929A46BC00245\",\r\n    };\r\n  }\r\n\r\n  async register(_refererAddress) {\r\n    this.setState({ loading: true });\r\n    await loadWeb3();\r\n    await this.loadBlockchainData();\r\n    if (this.state.isExist) {\r\n      Router.push(\"/dashboard\");\r\n      this.setState({ loading: false });\r\n    } else {\r\n      await this.state.contract.methods\r\n        .registrationExt(_refererAddress)\r\n        .send({\r\n          value: this.state.cost,\r\n          from: this.state.account,\r\n        })\r\n        .then(function (receipt) {\r\n          Router.push(\"/dashboard\");\r\n          this.setState({ loading: false });\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    const { account, setAccount } = this.context;\r\n    const isLoading = this.state.loading;\r\n    return (\r\n      <>\r\n        <form\r\n          className=\"automatic\"\r\n          onSubmit={async (event) => {\r\n            event.preventDefault();\r\n            await this.register(this.state.refererAddress);\r\n            const newUser = this.state.account;\r\n            setAccount(newUser);\r\n          }}\r\n        >\r\n          <button className=\"auto\">\r\n            {!isLoading ? <b>Authorisation</b> : <b>Loading</b>}\r\n          </button>\r\n        </form>\r\n        <style jsx>{`\r\n          .auto {\r\n            background: rgb(0, 237, 47);\r\n            background: linear-gradient(\r\n              306deg,\r\n              rgba(0, 237, 47, 1) 29%,\r\n              rgba(0, 179, 35, 1) 64%,\r\n              rgba(0, 179, 35, 1) 83%\r\n            );\r\n            box-shadow: none;\r\n            outline: none;\r\n            border: none;\r\n          }\r\n          button {\r\n            width: 100%;\r\n            text-align: center;\r\n            padding: 20px 0;\r\n            border-radius: 30px;\r\n            color: white;\r\n            font-size: 1.2em;\r\n          }\r\n        `}</style>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoLogin;\r\n"]},"metadata":{},"sourceType":"module"}