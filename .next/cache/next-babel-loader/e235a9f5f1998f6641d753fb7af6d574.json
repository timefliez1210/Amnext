{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\components\\\\matrix\\\\X3matrix.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Circle from \"./Circle\";\nimport { loadWeb3 } from \"../../utils/utility\";\nimport { ABI, ADDRESS } from \"../../utils/globals\";\nimport Web3 from \"web3\";\n\nconst X3matrix = props => {\n  const cost = props.cost;\n  const id = props.id;\n\n  const buyLevel = async (_id, _level, _cost, _account) => {\n    try {\n      await loadWeb3();\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      const contract = new web3.eth.Contract(ABI, ADDRESS);\n      await contract.methods.buyNewLevel(_id, _level).send({\n        value: _cost,\n        from: _account\n      }).then(function (receipt) {\n        window.alert(\"Succes!\");\n      });\n    } catch (err) {\n      window.alert(\"Something went wrong.. Check: \" + err);\n    }\n  };\n\n  if (props.bought) {\n    if (props.active === 0) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"matrix-head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"level\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, props.id), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, props.cost)), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"downlines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, __jsx(Circle, {\n        exist: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }))), __jsx(_JSXStyle, {\n        id: \"2568916271\",\n        __self: this\n      }, \".holder.jsx-2568916271{width:auto;width:200px;}.matrix-head.jsx-2568916271{background:rgb(31,169,255);background:linear-gradient( 270deg, rgba(31,169,255,1) 31%, rgba(21,117,251,1) 77% );display:grid;grid-template-columns:50px 150px;border-radius:20px;font-style:bold;font-size:1.2em;height:70px;overflow:hidden;cursor:pointer;}.level.jsx-2568916271{background:#338eff;padding:20px 20px;border-radius:20px;}.id.jsx-2568916271{padding:20px 20px;}.items.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}.lines.jsx-2568916271{height:25px;width:2px;background:lightblue;margin:auto auto;}.downlines.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\matrix\\\\\\\\X3matrix.jsx */\"));\n    } else if (props.active === 1) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"matrix-head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"level\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, props.id), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, props.cost)), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"downlines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, __jsx(Circle, {\n        exist: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }))), __jsx(_JSXStyle, {\n        id: \"2568916271\",\n        __self: this\n      }, \".holder.jsx-2568916271{width:auto;width:200px;}.matrix-head.jsx-2568916271{background:rgb(31,169,255);background:linear-gradient( 270deg, rgba(31,169,255,1) 31%, rgba(21,117,251,1) 77% );display:grid;grid-template-columns:50px 150px;border-radius:20px;font-style:bold;font-size:1.2em;height:70px;overflow:hidden;cursor:pointer;}.level.jsx-2568916271{background:#338eff;padding:20px 20px;border-radius:20px;}.id.jsx-2568916271{padding:20px 20px;}.items.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}.lines.jsx-2568916271{height:25px;width:2px;background:lightblue;margin:auto auto;}.downlines.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\matrix\\\\\\\\X3matrix.jsx */\"));\n    } else if (props.active === 2) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"matrix-head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"level\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, props.id), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, props.cost)), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"downlines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, __jsx(Circle, {\n        exist: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }))), __jsx(_JSXStyle, {\n        id: \"2568916271\",\n        __self: this\n      }, \".holder.jsx-2568916271{width:auto;width:200px;}.matrix-head.jsx-2568916271{background:rgb(31,169,255);background:linear-gradient( 270deg, rgba(31,169,255,1) 31%, rgba(21,117,251,1) 77% );display:grid;grid-template-columns:50px 150px;border-radius:20px;font-style:bold;font-size:1.2em;height:70px;overflow:hidden;cursor:pointer;}.level.jsx-2568916271{background:#338eff;padding:20px 20px;border-radius:20px;}.id.jsx-2568916271{padding:20px 20px;}.items.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}.lines.jsx-2568916271{height:25px;width:2px;background:lightblue;margin:auto auto;}.downlines.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\matrix\\\\\\\\X3matrix.jsx */\"));\n    } else {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"matrix-head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"level\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, props.id), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, props.cost)), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"jsx-2568916271\" + \" \" + \"downlines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, __jsx(Circle, {\n        exist: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      }), __jsx(Circle, {\n        exist: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }\n      }))), __jsx(_JSXStyle, {\n        id: \"2568916271\",\n        __self: this\n      }, \".holder.jsx-2568916271{width:auto;width:200px;}.matrix-head.jsx-2568916271{background:rgb(31,169,255);background:linear-gradient( 270deg, rgba(31,169,255,1) 31%, rgba(21,117,251,1) 77% );display:grid;grid-template-columns:50px 150px;border-radius:20px;font-style:bold;font-size:1.2em;height:70px;overflow:hidden;cursor:pointer;}.level.jsx-2568916271{background:#338eff;padding:20px 20px;border-radius:20px;}.id.jsx-2568916271{padding:20px 20px;}.items.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}.lines.jsx-2568916271{height:25px;width:2px;background:lightblue;margin:auto auto;}.downlines.jsx-2568916271{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\matrix\\\\\\\\X3matrix.jsx */\"));\n    }\n  } else {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"matrix-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, props.id), __jsx(\"button\", {\n      onClick: async () => {\n        await buyLevel(1, id, cost, props.account);\n      },\n      className: \"jsx-643270859\" + \" \" + \"buy-level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }\n    }, \"Buy for \", props.cost)), __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"lines\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"lines\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"lines\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"jsx-643270859\" + \" \" + \"downlines\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, __jsx(Circle, {\n      exist: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }), __jsx(Circle, {\n      exist: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }\n    }), __jsx(Circle, {\n      exist: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }))), __jsx(_JSXStyle, {\n      id: \"643270859\",\n      __self: this\n    }, \".buy-level.jsx-643270859{border:none;background:none;color:white;font-size:1em;}.holder.jsx-643270859{width:auto;width:200px;}.matrix-head.jsx-643270859{background:rgba(16,1,62,1);display:grid;grid-template-columns:50px 150px;border-radius:20px;font-style:bold;font-size:1.2em;height:70px;overflow:hidden;cursor:pointer;}.level.jsx-643270859{background:#338eff;padding:20px 20px;border-radius:20px;}.id.jsx-643270859{padding:20px 20px;}.items.jsx-643270859{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}.lines.jsx-643270859{height:25px;width:2px;background:lightblue;margin:auto auto;}.downlines.jsx-643270859{display:grid;grid-template-columns:30px 30px 30px;grid-gap:43px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\matrix\\\\\\\\X3matrix.jsx */\"));\n  }\n};\n\nexport default X3matrix;","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/components/matrix/X3matrix.jsx"],"names":["Circle","loadWeb3","ABI","ADDRESS","Web3","X3matrix","props","cost","id","buyLevel","_id","_level","_cost","_account","web3","givenProvider","contract","eth","Contract","methods","buyNewLevel","send","value","from","then","receipt","window","alert","err","bought","active","account"],"mappings":"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","sourcesContent":["import Circle from \"./Circle\";\r\nimport { loadWeb3 } from \"../../utils/utility\";\r\nimport { ABI, ADDRESS } from \"../../utils/globals\";\r\nimport Web3 from \"web3\";\r\n\r\nconst X3matrix = (props) => {\r\n  const cost = props.cost;\r\n  const id = props.id;\r\n  const buyLevel = async (_id, _level, _cost, _account) => {\r\n    try {\r\n      await loadWeb3();\r\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n      const contract = new web3.eth.Contract(ABI, ADDRESS);\r\n\r\n      await contract.methods\r\n        .buyNewLevel(_id, _level)\r\n        .send({\r\n          value: _cost,\r\n          from: _account,\r\n        })\r\n        .then(function (receipt) {\r\n          window.alert(\"Succes!\");\r\n        });\r\n    } catch (err) {\r\n      window.alert(\"Something went wrong.. Check: \" + err);\r\n    }\r\n  };\r\n\r\n  if (props.bought) {\r\n    if (props.active === 0) {\r\n      return (\r\n        <>\r\n          <div className=\"holder\">\r\n            <div className=\"matrix-head\">\r\n              <div className=\"level\">{props.id}</div>\r\n              <div className=\"id\">{props.cost}</div>\r\n            </div>\r\n            <div className=\"items\">\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n            </div>\r\n            <div className=\"downlines\">\r\n              <Circle exist={false} />\r\n              <Circle exist={false} />\r\n              <Circle exist={false} />\r\n            </div>\r\n          </div>\r\n          <style jsx>{`\r\n            .holder {\r\n              width: auto;\r\n              width: 200px;\r\n            }\r\n            .matrix-head {\r\n              background: rgb(31, 169, 255);\r\n              background: linear-gradient(\r\n                270deg,\r\n                rgba(31, 169, 255, 1) 31%,\r\n                rgba(21, 117, 251, 1) 77%\r\n              );\r\n              display: grid;\r\n              grid-template-columns: 50px 150px;\r\n              border-radius: 20px;\r\n              font-style: bold;\r\n              font-size: 1.2em;\r\n              height: 70px;\r\n              overflow: hidden;\r\n              cursor: pointer;\r\n            }\r\n            .level {\r\n              background: #338eff;\r\n              padding: 20px 20px;\r\n              border-radius: 20px;\r\n            }\r\n            .id {\r\n              padding: 20px 20px;\r\n            }\r\n            .items {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n            .lines {\r\n              height: 25px;\r\n              width: 2px;\r\n              background: lightblue;\r\n              margin: auto auto;\r\n            }\r\n            .downlines {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n          `}</style>\r\n        </>\r\n      );\r\n    } else if (props.active === 1) {\r\n      return (\r\n        <>\r\n          <div className=\"holder\">\r\n            <div className=\"matrix-head\">\r\n              <div className=\"level\">{props.id}</div>\r\n              <div className=\"id\">{props.cost}</div>\r\n            </div>\r\n            <div className=\"items\">\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n            </div>\r\n            <div className=\"downlines\">\r\n              <Circle exist={true} />\r\n              <Circle exist={false} />\r\n              <Circle exist={false} />\r\n            </div>\r\n          </div>\r\n          <style jsx>{`\r\n            .holder {\r\n              width: auto;\r\n              width: 200px;\r\n            }\r\n            .matrix-head {\r\n              background: rgb(31, 169, 255);\r\n              background: linear-gradient(\r\n                270deg,\r\n                rgba(31, 169, 255, 1) 31%,\r\n                rgba(21, 117, 251, 1) 77%\r\n              );\r\n              display: grid;\r\n              grid-template-columns: 50px 150px;\r\n              border-radius: 20px;\r\n              font-style: bold;\r\n              font-size: 1.2em;\r\n              height: 70px;\r\n              overflow: hidden;\r\n              cursor: pointer;\r\n            }\r\n            .level {\r\n              background: #338eff;\r\n              padding: 20px 20px;\r\n              border-radius: 20px;\r\n            }\r\n            .id {\r\n              padding: 20px 20px;\r\n            }\r\n            .items {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n            .lines {\r\n              height: 25px;\r\n              width: 2px;\r\n              background: lightblue;\r\n              margin: auto auto;\r\n            }\r\n            .downlines {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n          `}</style>\r\n        </>\r\n      );\r\n    } else if (props.active === 2) {\r\n      return (\r\n        <>\r\n          <div className=\"holder\">\r\n            <div className=\"matrix-head\">\r\n              <div className=\"level\">{props.id}</div>\r\n              <div className=\"id\">{props.cost}</div>\r\n            </div>\r\n            <div className=\"items\">\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n            </div>\r\n            <div className=\"downlines\">\r\n              <Circle exist={true} />\r\n              <Circle exist={true} />\r\n              <Circle exist={false} />\r\n            </div>\r\n          </div>\r\n          <style jsx>{`\r\n            .holder {\r\n              width: auto;\r\n              width: 200px;\r\n            }\r\n            .matrix-head {\r\n              background: rgb(31, 169, 255);\r\n              background: linear-gradient(\r\n                270deg,\r\n                rgba(31, 169, 255, 1) 31%,\r\n                rgba(21, 117, 251, 1) 77%\r\n              );\r\n              display: grid;\r\n              grid-template-columns: 50px 150px;\r\n              border-radius: 20px;\r\n              font-style: bold;\r\n              font-size: 1.2em;\r\n              height: 70px;\r\n              overflow: hidden;\r\n              cursor: pointer;\r\n            }\r\n            .level {\r\n              background: #338eff;\r\n              padding: 20px 20px;\r\n              border-radius: 20px;\r\n            }\r\n            .id {\r\n              padding: 20px 20px;\r\n            }\r\n            .items {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n            .lines {\r\n              height: 25px;\r\n              width: 2px;\r\n              background: lightblue;\r\n              margin: auto auto;\r\n            }\r\n            .downlines {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n          `}</style>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"holder\">\r\n            <div className=\"matrix-head\">\r\n              <div className=\"level\">{props.id}</div>\r\n              <div className=\"id\">{props.cost}</div>\r\n            </div>\r\n            <div className=\"items\">\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n              <div className=\"lines\"></div>\r\n            </div>\r\n            <div className=\"downlines\">\r\n              <Circle exist={true} />\r\n              <Circle exist={true} />\r\n              <Circle exist={true} />\r\n            </div>\r\n          </div>\r\n          <style jsx>{`\r\n            .holder {\r\n              width: auto;\r\n              width: 200px;\r\n            }\r\n            .matrix-head {\r\n              background: rgb(31, 169, 255);\r\n              background: linear-gradient(\r\n                270deg,\r\n                rgba(31, 169, 255, 1) 31%,\r\n                rgba(21, 117, 251, 1) 77%\r\n              );\r\n              display: grid;\r\n              grid-template-columns: 50px 150px;\r\n              border-radius: 20px;\r\n              font-style: bold;\r\n              font-size: 1.2em;\r\n              height: 70px;\r\n              overflow: hidden;\r\n              cursor: pointer;\r\n            }\r\n            .level {\r\n              background: #338eff;\r\n              padding: 20px 20px;\r\n              border-radius: 20px;\r\n            }\r\n            .id {\r\n              padding: 20px 20px;\r\n            }\r\n            .items {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n            .lines {\r\n              height: 25px;\r\n              width: 2px;\r\n              background: lightblue;\r\n              margin: auto auto;\r\n            }\r\n            .downlines {\r\n              display: grid;\r\n              grid-template-columns: 30px 30px 30px;\r\n              grid-gap: 43px;\r\n            }\r\n          `}</style>\r\n        </>\r\n      );\r\n    }\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className=\"holder\">\r\n          <div className=\"matrix-head\">\r\n            <div className=\"level\">{props.id}</div>\r\n            <button\r\n              className=\"buy-level\"\r\n              onClick={async () => {\r\n                await buyLevel(1, id, cost, props.account);\r\n              }}\r\n            >\r\n              Buy for {props.cost}\r\n            </button>\r\n          </div>\r\n          <div className=\"items\">\r\n            <div className=\"lines\"></div>\r\n            <div className=\"lines\"></div>\r\n            <div className=\"lines\"></div>\r\n          </div>\r\n          <div className=\"downlines\">\r\n            <Circle exist={false} />\r\n            <Circle exist={false} />\r\n            <Circle exist={false} />\r\n          </div>\r\n        </div>\r\n        <style jsx>{`\r\n          .buy-level {\r\n            border: none;\r\n            background: none;\r\n            color: white;\r\n            font-size: 1em;\r\n          }\r\n          .holder {\r\n            width: auto;\r\n            width: 200px;\r\n          }\r\n          .matrix-head {\r\n            background: rgba(16, 1, 62, 1);\r\n            display: grid;\r\n            grid-template-columns: 50px 150px;\r\n            border-radius: 20px;\r\n            font-style: bold;\r\n            font-size: 1.2em;\r\n            height: 70px;\r\n            overflow: hidden;\r\n            cursor: pointer;\r\n          }\r\n          .level {\r\n            background: #338eff;\r\n            padding: 20px 20px;\r\n            border-radius: 20px;\r\n          }\r\n          .id {\r\n            padding: 20px 20px;\r\n          }\r\n          .items {\r\n            display: grid;\r\n            grid-template-columns: 30px 30px 30px;\r\n            grid-gap: 43px;\r\n          }\r\n          .lines {\r\n            height: 25px;\r\n            width: 2px;\r\n            background: lightblue;\r\n            margin: auto auto;\r\n          }\r\n          .downlines {\r\n            display: grid;\r\n            grid-template-columns: 30px 30px 30px;\r\n            grid-gap: 43px;\r\n          }\r\n        `}</style>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default X3matrix;\r\n"]},"metadata":{},"sourceType":"module"}