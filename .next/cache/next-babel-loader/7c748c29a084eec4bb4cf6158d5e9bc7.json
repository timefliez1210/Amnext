{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\pages\\\\ref\\\\[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useRouter } from \"next/router\";\nimport { useRouter } from \"next/router\";\nimport { useContext, useState } from \"react\";\n\nconst RefLink = () => {\n  const {\n    0: contract,\n    1: setContract\n  } = useState();\n  const {\n    0: isExist,\n    1: setIsExist\n  } = useState(false);\n  const {\n    0: cost,\n    1: setCost\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: refAddress,\n    1: setRefAddress\n  } = useState(\"\");\n  const {\n    0: account,\n    1: setAccount\n  } = useState(\"\");\n  const router = useRouter();\n  const id = router.query.id;\n  console.log(id); // idToAddress\n  // pass Address into Context\n\n  async function loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const accounts = await web3.eth.getAccounts();\n    setAccount(\"accounts[0]\");\n    const contract = new web3.eth.Contract(ABI, ADDRESS);\n    this.setState({\n      contract\n    });\n    const isExists = await contract.methods.isUserExists(this.state.account).call();\n    this.setState({\n      isExist: isExists\n    });\n    const costs = await contract.methods.registrationCost().call();\n    this.setState({\n      cost: costs\n    });\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  async function loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  }\n\n  async function register(_refererAddress) {\n    this.setState({\n      loading: true\n    });\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n\n    if (this.state.isExist) {\n      Router.push(\"/dashboard\");\n      this.setState({\n        loading: false\n      });\n    } else {\n      await this.state.contract.methods.registrationExt(_refererAddress).send({\n        value: this.state.cost,\n        from: this.state.account\n      }).then(function (receipt) {\n        Router.push(\"/dashboard\");\n        this.setState({\n          loading: false\n        });\n      });\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2922224022\" + \" \" + \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2922224022\" + \" \" + \"hero-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2922224022\" + \" \" + \"picture-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-2922224022\" + \" \" + \"form-part\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2922224022\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Register\"), __jsx(\"p\", {\n    className: \"jsx-2922224022\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Your inviter is ID \", router.query.id), __jsx(\"form\", {\n    onSubmit: async event => {\n      event.preventDefault();\n      await this.register(this.state.refererAddress);\n      const newUser = this.state.account;\n      setAccount(newUser);\n    },\n    className: \"jsx-2922224022\" + \" \" + \"automatic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"jsx-2922224022\" + \" \" + \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Register\")), __jsx(\"p\", {\n    className: \"jsx-2922224022\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Telegram Channel @cryptoofficial\"))), __jsx(_JSXStyle, {\n    id: \"2922224022\",\n    __self: this\n  }, \".header.jsx-2922224022{width:100vw;height:100vh;overflow:hidden;background:rgba(16,1,62,1);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media only screen and (max-width:1000px){.header.jsx-2922224022{height:auto;}}.hero-image.jsx-2922224022{width:70vw;height:100vw;}.picture-holder.jsx-2922224022{width:100%;height:100vh;background-image:url(\\\"/assets/img/hero-picture.jpg\\\");background-repeat:no-repeat;background-size:contain;background-position:center;}.hero.jsx-2922224022{width:100%;}.form-part.jsx-2922224022{background:rgba(28,22,85,1);width:30vw;padding:60px;color:white;height:100vh;text-align:center;}p.jsx-2922224022{color:grey;}h1.jsx-2922224022{margin-top:15vh;margin-bottom:5vh;font-size:1.5em;}button.jsx-2922224022{width:100%;text-align:center;padding:20px 0;border-radius:30px;color:white;font-size:1.2em;}@media only screen and (max-width:1000px){.hero-image.jsx-2922224022{display:none;}.form-part.jsx-2922224022{width:95vw;margin:auto auto;}}.auto.jsx-2922224022{background:rgb(0,237,47);background:linear-gradient( 306deg, rgba(0,237,47,1) 29%, rgba(0,179,35,1) 64%, rgba(0,179,35,1) 83% );box-shadow:none;outline:none;border:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY3JmYWJcXERlc2t0b3BcXGZvcnNhZ2UtYm9pbGVycGxhdGVcXHBhZ2VzXFxyZWZcXFtpZF0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkZrQixBQUd1QixBQVFFLEFBSUgsQUFJQSxBQVFBLEFBR29CLEFBU3BCLEFBR0ssQUFLTCxBQVVJLEFBR0YsQUFLYyxXQWpEZCxBQUlBLEFBUWYsQUFZQSxBQVFvQixBQWFDLENBekROLEFBUWIsQ0E4Q0EsR0Fma0IsUUExQnBCLEFBSXVELENBaEJyQyxBQWtFZixHQXhDVSxBQStCWCxDQWJlLEtBTEMsS0FaSCxFQTFCaUIsR0E0Q1gsTUFMckIsRUFaYyxXQWtCQSxDQWpCQyxJQTNCQSxPQTZDRyxFQTlCWSxBQWFWLGNBa0JwQixJQWpCQSxVQWIwQix1QkFpRFIsQ0FoRFcsYUFoQjdCLEVBaUVlLFlBaERmLENBaURjLFlBQ2QiLCJmaWxlIjoiQzpcXFVzZXJzXFxjcmZhYlxcRGVza3RvcFxcZm9yc2FnZS1ib2lsZXJwbGF0ZVxccGFnZXNcXHJlZlxcW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmNvbnN0IFJlZkxpbmsgPSAoKSA9PiB7XHJcbiAgY29uc3QgW2NvbnRyYWN0LCBzZXRDb250cmFjdF0gPSB1c2VTdGF0ZSgpO1xyXG4gIGNvbnN0IFtpc0V4aXN0LCBzZXRJc0V4aXN0XSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBbY29zdCwgc2V0Q29zdF0gPSB1c2VTdGF0ZShcIlwiKTtcclxuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW3JlZkFkZHJlc3MsIHNldFJlZkFkZHJlc3NdID0gdXNlU3RhdGUoXCJcIik7XHJcbiAgY29uc3QgW2FjY291bnQsIHNldEFjY291bnRdID0gdXNlU3RhdGUoXCJcIik7XHJcblxyXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG4gIGNvbnN0IGlkID0gcm91dGVyLnF1ZXJ5LmlkO1xyXG4gIGNvbnNvbGUubG9nKGlkKTtcclxuICAvLyBpZFRvQWRkcmVzc1xyXG4gIC8vIHBhc3MgQWRkcmVzcyBpbnRvIENvbnRleHRcclxuICBhc3luYyBmdW5jdGlvbiBsb2FkQmxvY2tjaGFpbkRhdGEoKSB7XHJcbiAgICBjb25zdCB3ZWIzID0gbmV3IFdlYjMoV2ViMy5naXZlblByb3ZpZGVyIHx8IFwiaHR0cDovL2xvY2FsaG9zdDo4NTQ1XCIpO1xyXG4gICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCB3ZWIzLmV0aC5nZXRBY2NvdW50cygpO1xyXG4gICAgc2V0QWNjb3VudChcImFjY291bnRzWzBdXCIpO1xyXG5cclxuICAgIGNvbnN0IGNvbnRyYWN0ID0gbmV3IHdlYjMuZXRoLkNvbnRyYWN0KEFCSSwgQUREUkVTUyk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgY29udHJhY3QgfSk7XHJcbiAgICBjb25zdCBpc0V4aXN0cyA9IGF3YWl0IGNvbnRyYWN0Lm1ldGhvZHNcclxuICAgICAgLmlzVXNlckV4aXN0cyh0aGlzLnN0YXRlLmFjY291bnQpXHJcbiAgICAgIC5jYWxsKCk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgaXNFeGlzdDogaXNFeGlzdHMgfSk7XHJcbiAgICBjb25zdCBjb3N0cyA9IGF3YWl0IGNvbnRyYWN0Lm1ldGhvZHMucmVnaXN0cmF0aW9uQ29zdCgpLmNhbGwoKTtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBjb3N0OiBjb3N0cyB9KTtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBpc0xvYWRpbmc6IGZhbHNlIH0pO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gbG9hZFdlYjMoKSB7XHJcbiAgICBpZiAod2luZG93LmV0aGVyZXVtKSB7XHJcbiAgICAgIHdpbmRvdy53ZWIzID0gbmV3IFdlYjMod2luZG93LmV0aGVyZXVtKTtcclxuICAgICAgYXdhaXQgd2luZG93LmV0aGVyZXVtLmVuYWJsZSgpO1xyXG4gICAgfSBlbHNlIGlmICh3aW5kb3cud2ViMykge1xyXG4gICAgICB3aW5kb3cud2ViMyA9IG5ldyBXZWIzKHdpbmRvdy53ZWIzLmN1cnJlbnRQcm92aWRlcik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB3aW5kb3cuYWxlcnQoXHJcbiAgICAgICAgXCJOb24tRXRoZXJldW0gYnJvd3NlciBkZXRlY3RlZC4gWW91IHNob3VsZCBjb25zaWRlciB0cnlpbmcgTWV0YU1hc2shXCJcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKF9yZWZlcmVyQWRkcmVzcykge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IGxvYWRpbmc6IHRydWUgfSk7XHJcbiAgICBhd2FpdCB0aGlzLmxvYWRXZWIzKCk7XHJcbiAgICBhd2FpdCB0aGlzLmxvYWRCbG9ja2NoYWluRGF0YSgpO1xyXG4gICAgaWYgKHRoaXMuc3RhdGUuaXNFeGlzdCkge1xyXG4gICAgICBSb3V0ZXIucHVzaChcIi9kYXNoYm9hcmRcIik7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBsb2FkaW5nOiBmYWxzZSB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGF3YWl0IHRoaXMuc3RhdGUuY29udHJhY3QubWV0aG9kc1xyXG4gICAgICAgIC5yZWdpc3RyYXRpb25FeHQoX3JlZmVyZXJBZGRyZXNzKVxyXG4gICAgICAgIC5zZW5kKHtcclxuICAgICAgICAgIHZhbHVlOiB0aGlzLnN0YXRlLmNvc3QsXHJcbiAgICAgICAgICBmcm9tOiB0aGlzLnN0YXRlLmFjY291bnQsXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihmdW5jdGlvbiAocmVjZWlwdCkge1xyXG4gICAgICAgICAgUm91dGVyLnB1c2goXCIvZGFzaGJvYXJkXCIpO1xyXG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlcm8taW1hZ2VcIj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGljdHVyZS1ob2xkZXJcIj48L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tcGFydFwiPlxyXG4gICAgICAgICAgPGgxPlJlZ2lzdGVyPC9oMT5cclxuICAgICAgICAgIDxwPllvdXIgaW52aXRlciBpcyBJRCB7cm91dGVyLnF1ZXJ5LmlkfTwvcD5cclxuICAgICAgICAgIDxmb3JtXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImF1dG9tYXRpY1wiXHJcbiAgICAgICAgICAgIG9uU3VibWl0PXthc3luYyAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgIGF3YWl0IHRoaXMucmVnaXN0ZXIodGhpcy5zdGF0ZS5yZWZlcmVyQWRkcmVzcyk7XHJcbiAgICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IHRoaXMuc3RhdGUuYWNjb3VudDtcclxuICAgICAgICAgICAgICBzZXRBY2NvdW50KG5ld1VzZXIpO1xyXG4gICAgICAgICAgICB9fVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImF1dG9cIj5cclxuICAgICAgICAgICAgICBSZWdpc3RlclxyXG4gICAgICAgICAgICAgIHsvKiB7IWlzTG9hZGluZyA/IDxiPkF1dGhvcmlzYXRpb248L2I+IDogPGI+TG9hZGluZzwvYj59ICovfVxyXG4gICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgIDwvZm9ybT5cclxuXHJcbiAgICAgICAgICA8cD5UZWxlZ3JhbSBDaGFubmVsIEBjcnlwdG9vZmZpY2lhbDwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAuaGVhZGVyIHtcclxuICAgICAgICAgIHdpZHRoOiAxMDB2dztcclxuICAgICAgICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgxNiwgMSwgNjIsIDEpO1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpIHtcclxuICAgICAgICAgIC5oZWFkZXIge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5oZXJvLWltYWdlIHtcclxuICAgICAgICAgIHdpZHRoOiA3MHZ3O1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICB9XHJcbiAgICAgICAgLnBpY3R1cmUtaG9sZGVyIHtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9hc3NldHMvaW1nL2hlcm8tcGljdHVyZS5qcGdcIik7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuaGVybyB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmZvcm0tcGFydCB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI4LCAyMiwgODUsIDEpO1xyXG4gICAgICAgICAgd2lkdGg6IDMwdnc7XHJcbiAgICAgICAgICBwYWRkaW5nOiA2MHB4O1xyXG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHAge1xyXG4gICAgICAgICAgY29sb3I6IGdyZXk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgxIHtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDE1dmg7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1dmg7XHJcbiAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICBwYWRkaW5nOiAyMHB4IDA7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XHJcbiAgICAgICAgICAuaGVyby1pbWFnZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAuZm9ybS1wYXJ0IHtcclxuICAgICAgICAgICAgd2lkdGg6IDk1dnc7XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0byBhdXRvO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAuYXV0byB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoMCwgMjM3LCA0Nyk7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICAgIDMwNmRlZyxcclxuICAgICAgICAgICAgcmdiYSgwLCAyMzcsIDQ3LCAxKSAyOSUsXHJcbiAgICAgICAgICAgIHJnYmEoMCwgMTc5LCAzNSwgMSkgNjQlLFxyXG4gICAgICAgICAgICByZ2JhKDAsIDE3OSwgMzUsIDEpIDgzJVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJlZkxpbms7XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\pages\\\\\\\\ref\\\\\\\\[id].js */\"));\n};\n\nexport default RefLink;","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/pages/ref/[id].js"],"names":["useRouter","useContext","useState","RefLink","contract","setContract","isExist","setIsExist","cost","setCost","loading","setLoading","refAddress","setRefAddress","account","setAccount","router","id","query","console","log","loadBlockchainData","web3","Web3","givenProvider","accounts","eth","getAccounts","Contract","ABI","ADDRESS","setState","isExists","methods","isUserExists","state","call","costs","registrationCost","isLoading","loadWeb3","window","ethereum","enable","currentProvider","alert","register","_refererAddress","Router","push","registrationExt","send","value","from","then","receipt","event","preventDefault","refererAddress","newUser"],"mappings":"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","sourcesContent":["// import { useRouter } from \"next/router\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nconst RefLink = () => {\r\n  const [contract, setContract] = useState();\r\n  const [isExist, setIsExist] = useState(false);\r\n  const [cost, setCost] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [refAddress, setRefAddress] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n\r\n  const router = useRouter();\r\n  const id = router.query.id;\r\n  console.log(id);\r\n  // idToAddress\r\n  // pass Address into Context\r\n  async function loadBlockchainData() {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n    const accounts = await web3.eth.getAccounts();\r\n    setAccount(\"accounts[0]\");\r\n\r\n    const contract = new web3.eth.Contract(ABI, ADDRESS);\r\n    this.setState({ contract });\r\n    const isExists = await contract.methods\r\n      .isUserExists(this.state.account)\r\n      .call();\r\n    this.setState({ isExist: isExists });\r\n    const costs = await contract.methods.registrationCost().call();\r\n    this.setState({ cost: costs });\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async function register(_refererAddress) {\r\n    this.setState({ loading: true });\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n    if (this.state.isExist) {\r\n      Router.push(\"/dashboard\");\r\n      this.setState({ loading: false });\r\n    } else {\r\n      await this.state.contract.methods\r\n        .registrationExt(_refererAddress)\r\n        .send({\r\n          value: this.state.cost,\r\n          from: this.state.account,\r\n        })\r\n        .then(function (receipt) {\r\n          Router.push(\"/dashboard\");\r\n          this.setState({ loading: false });\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"hero-image\">\r\n          <div className=\"picture-holder\"></div>\r\n        </div>\r\n        <div className=\"form-part\">\r\n          <h1>Register</h1>\r\n          <p>Your inviter is ID {router.query.id}</p>\r\n          <form\r\n            className=\"automatic\"\r\n            onSubmit={async (event) => {\r\n              event.preventDefault();\r\n              await this.register(this.state.refererAddress);\r\n              const newUser = this.state.account;\r\n              setAccount(newUser);\r\n            }}\r\n          >\r\n            <button className=\"auto\">\r\n              Register\r\n              {/* {!isLoading ? <b>Authorisation</b> : <b>Loading</b>} */}\r\n            </button>\r\n          </form>\r\n\r\n          <p>Telegram Channel @cryptoofficial</p>\r\n        </div>\r\n      </div>\r\n      <style jsx>{`\r\n        .header {\r\n          width: 100vw;\r\n          height: 100vh;\r\n          overflow: hidden;\r\n          background: rgba(16, 1, 62, 1);\r\n          display: flex;\r\n        }\r\n        @media only screen and (max-width: 1000px) {\r\n          .header {\r\n            height: auto;\r\n          }\r\n        }\r\n        .hero-image {\r\n          width: 70vw;\r\n          height: 100vw;\r\n        }\r\n        .picture-holder {\r\n          width: 100%;\r\n          height: 100vh;\r\n          background-image: url(\"/assets/img/hero-picture.jpg\");\r\n          background-repeat: no-repeat;\r\n          background-size: contain;\r\n          background-position: center;\r\n        }\r\n        .hero {\r\n          width: 100%;\r\n        }\r\n        .form-part {\r\n          background: rgba(28, 22, 85, 1);\r\n          width: 30vw;\r\n          padding: 60px;\r\n          color: white;\r\n          height: 100vh;\r\n          text-align: center;\r\n        }\r\n\r\n        p {\r\n          color: grey;\r\n        }\r\n        h1 {\r\n          margin-top: 15vh;\r\n          margin-bottom: 5vh;\r\n          font-size: 1.5em;\r\n        }\r\n        button {\r\n          width: 100%;\r\n          text-align: center;\r\n          padding: 20px 0;\r\n          border-radius: 30px;\r\n          color: white;\r\n          font-size: 1.2em;\r\n        }\r\n\r\n        @media only screen and (max-width: 1000px) {\r\n          .hero-image {\r\n            display: none;\r\n          }\r\n          .form-part {\r\n            width: 95vw;\r\n            margin: auto auto;\r\n          }\r\n        }\r\n        .auto {\r\n          background: rgb(0, 237, 47);\r\n          background: linear-gradient(\r\n            306deg,\r\n            rgba(0, 237, 47, 1) 29%,\r\n            rgba(0, 179, 35, 1) 64%,\r\n            rgba(0, 179, 35, 1) 83%\r\n          );\r\n          box-shadow: none;\r\n          outline: none;\r\n          border: none;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RefLink;\r\n"]},"metadata":{},"sourceType":"module"}