{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\components\\\\matrix\\\\MatrixSystem.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport X3MatrixHolder from \"./X3MatrixHolder\";\nimport X4MatrixHolder from \"./X4MatrixHolder\";\nimport Web3 from \"web3\";\nimport { ABI, ADDRESS } from \"../../utils/globals\";\nimport { loadWeb3 } from \"../../utils/utility\";\n\nvar MatrixSystem = /*#__PURE__*/function (_Component) {\n  _inherits(MatrixSystem, _Component);\n\n  var _super = _createSuper(MatrixSystem);\n\n  _createClass(MatrixSystem, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.setState({\n                  account: this.props.account\n                });\n                _context.next = 4;\n                return loadWeb3();\n\n              case 4:\n                _context.next = 6;\n                return this.loadBlockchainData();\n\n              case 6:\n                this.loadX3();\n                this.loadX4();\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                window.alert(\"Something went wrong.. Check: \" + _context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, contract, costs;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n                contract = new web3.eth.Contract(ABI, ADDRESS);\n                this.setState({\n                  contract: contract\n                });\n                _context2.next = 6;\n                return contract.methods.registrationCost().call();\n\n              case 6:\n                costs = _context2.sent;\n                this.setState({\n                  cost: costs\n                }); // Matrix Calls for the X3\n                // Matrix Calls for the X4\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                window.alert(\"Something went wrong.. Check: \" + _context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadX3\",\n    value: function () {\n      var _loadX = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var contract, x3, i, res, elementsX3, _cost, _i, j, downlines, x3Exist, _i2, _res, x3Payload;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                contract = this.state.contact;\n                x3 = [];\n                i = 1;\n\n              case 3:\n                if (!(i < 13)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 6;\n                return contract.methods.usersX3Matrix(this.state.account, i).call();\n\n              case 6:\n                res = _context3.sent;\n                x3.push({\n                  level: i,\n                  userX3: res\n                });\n\n              case 8:\n                i++;\n                _context3.next = 3;\n                break;\n\n              case 11:\n                elementsX3 = [];\n                _cost = this.state.cost / 2;\n\n                for (_i = 0; _i < 12; _i++) {\n                  j = _i + 1;\n                  downlines = x3[_i].userX3[1].length;\n                  elementsX3.push({\n                    id: j,\n                    number: downlines,\n                    key: j,\n                    cost: _cost\n                  });\n                  _cost = _cost * 2;\n                }\n\n                x3Exist = [];\n                _i2 = 1;\n\n              case 16:\n                if (!(_i2 < 13)) {\n                  _context3.next = 24;\n                  break;\n                }\n\n                _context3.next = 19;\n                return contract.methods.usersActiveX3Levels(this.state.account, _i2).call();\n\n              case 19:\n                _res = _context3.sent;\n                x3Exist.push({\n                  id: _i2,\n                  userX3Exist: _res\n                });\n\n              case 21:\n                _i2++;\n                _context3.next = 16;\n                break;\n\n              case 24:\n                x3Payload = this.x3Infos(x3Exist, elementsX3);\n                this.setState({\n                  x3Payload: x3Payload\n                });\n\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadX3() {\n        return _loadX.apply(this, arguments);\n      }\n\n      return loadX3;\n    }()\n  }, {\n    key: \"loadX4\",\n    value: function () {\n      var _loadX2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var contract, _x4cost, x4Exist, i, res, x6, _i3, _res2, x6Payload;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                contract = this.state.contact;\n                _x4cost = this.state.cost / 2;\n                x4Exist = [];\n                i = 1;\n\n              case 4:\n                if (!(i < 13)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                _context4.next = 7;\n                return contract.methods.usersActiveX6Levels(this.state.account, i).call();\n\n              case 7:\n                res = _context4.sent;\n                x4Exist.push({\n                  id: i,\n                  userX4Exist: res,\n                  key: i,\n                  cost: _x4cost\n                });\n                _x4cost = _x4cost * 2;\n\n              case 10:\n                i++;\n                _context4.next = 4;\n                break;\n\n              case 13:\n                x6 = [];\n                _i3 = 1;\n\n              case 15:\n                if (!(_i3 < 13)) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                _context4.next = 18;\n                return contract.methods.usersX6Matrix(this.state.account, _i3).call();\n\n              case 18:\n                _res2 = _context4.sent;\n                x6.push({\n                  id: _i3,\n                  userX6: _res2\n                });\n\n              case 20:\n                _i3++;\n                _context4.next = 15;\n                break;\n\n              case 23:\n                x6Payload = this.x3Infos(x4Exist, x6);\n                this.setState({\n                  x6Payload: x6Payload\n                });\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadX4() {\n        return _loadX2.apply(this, arguments);\n      }\n\n      return loadX4;\n    }() // Merging X3 quereries into 1 Payload\n\n  }, {\n    key: \"x3Infos\",\n    value: function x3Infos(arr1, arr2) {\n      return arr1.map(function (item, i) {\n        if (item.id === arr2[i].id) {\n          return Object.assign({}, item, arr2[i]);\n        }\n      });\n    }\n  }]);\n\n  function MatrixSystem(props) {\n    var _this;\n\n    _classCallCheck(this, MatrixSystem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      account: \"\",\n      parnterCount: \"\",\n      cost: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(MatrixSystem, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(X3MatrixHolder, {\n        struc: this.state.x3Payload,\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }), __jsx(X4MatrixHolder, {\n        struc: this.state.x6Payload,\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MatrixSystem;\n}(Component);\n\nexport default MatrixSystem;","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/components/matrix/MatrixSystem.jsx"],"names":["React","Component","X3MatrixHolder","X4MatrixHolder","Web3","ABI","ADDRESS","loadWeb3","MatrixSystem","setState","account","props","loadBlockchainData","loadX3","loadX4","window","alert","web3","givenProvider","contract","eth","Contract","methods","registrationCost","call","costs","cost","state","contact","x3","i","usersX3Matrix","res","push","level","userX3","elementsX3","_cost","j","downlines","length","id","number","key","x3Exist","usersActiveX3Levels","userX3Exist","x3Payload","x3Infos","_x4cost","x4Exist","usersActiveX6Levels","userX4Exist","x6","usersX6Matrix","userX6","x6Payload","arr1","arr2","map","item","Object","assign","parnterCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport X3MatrixHolder from \"./X3MatrixHolder\";\r\nimport X4MatrixHolder from \"./X4MatrixHolder\";\r\nimport Web3 from \"web3\";\r\nimport { ABI, ADDRESS } from \"../../utils/globals\";\r\nimport { loadWeb3 } from \"../../utils/utility\";\r\n\r\nclass MatrixSystem extends Component {\r\n  async UNSAFE_componentWillMount() {\r\n    try {\r\n      this.setState({ account: this.props.account });\r\n      await loadWeb3();\r\n      await this.loadBlockchainData();\r\n      this.loadX3();\r\n      this.loadX4();\r\n    } catch (err) {\r\n      window.alert(\"Something went wrong.. Check: \" + err);\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    try {\r\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n      const contract = new web3.eth.Contract(ABI, ADDRESS);\r\n      this.setState({ contract });\r\n\r\n      const costs = await contract.methods.registrationCost().call();\r\n      this.setState({ cost: costs });\r\n\r\n      // Matrix Calls for the X3\r\n\r\n      // Matrix Calls for the X4\r\n    } catch (err) {\r\n      window.alert(\"Something went wrong.. Check: \" + err);\r\n    }\r\n  }\r\n\r\n  async loadX3() {\r\n    const contract = this.state.contact;\r\n    const x3 = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersX3Matrix(this.state.account, i)\r\n        .call();\r\n      x3.push({\r\n        level: i,\r\n        userX3: res,\r\n      });\r\n    }\r\n    const elementsX3 = [];\r\n    var _cost = this.state.cost / 2;\r\n    for (let i = 0; i < 12; i++) {\r\n      let j = i + 1;\r\n\r\n      const downlines = x3[i].userX3[1].length;\r\n      elementsX3.push({\r\n        id: j,\r\n        number: downlines,\r\n        key: j,\r\n        cost: _cost,\r\n      });\r\n      _cost = _cost * 2;\r\n    }\r\n    const x3Exist = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersActiveX3Levels(this.state.account, i)\r\n        .call();\r\n      x3Exist.push({\r\n        id: i,\r\n        userX3Exist: res,\r\n      });\r\n    }\r\n    const x3Payload = this.x3Infos(x3Exist, elementsX3);\r\n    this.setState({ x3Payload });\r\n  }\r\n\r\n  async loadX4() {\r\n    const contract = this.state.contact;\r\n    var _x4cost = this.state.cost / 2;\r\n    const x4Exist = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersActiveX6Levels(this.state.account, i)\r\n        .call();\r\n      x4Exist.push({\r\n        id: i,\r\n        userX4Exist: res,\r\n        key: i,\r\n        cost: _x4cost,\r\n      });\r\n      _x4cost = _x4cost * 2;\r\n    }\r\n    const x6 = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersX6Matrix(this.state.account, i)\r\n        .call();\r\n      x6.push({\r\n        id: i,\r\n        userX6: res,\r\n      });\r\n    }\r\n\r\n    const x6Payload = this.x3Infos(x4Exist, x6);\r\n    this.setState({ x6Payload });\r\n  }\r\n\r\n  // Merging X3 quereries into 1 Payload\r\n  x3Infos(arr1, arr2) {\r\n    return arr1.map((item, i) => {\r\n      if (item.id === arr2[i].id) {\r\n        return Object.assign({}, item, arr2[i]);\r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      parnterCount: \"\",\r\n      cost: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <X3MatrixHolder\r\n          struc={this.state.x3Payload}\r\n          account={this.state.account}\r\n        />\r\n        <X4MatrixHolder\r\n          struc={this.state.x6Payload}\r\n          account={this.state.account}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MatrixSystem;\r\n"]},"metadata":{},"sourceType":"module"}