{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\components\\\\matrix\\\\MatrixSystem.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport X3MatrixHolder from \"./X3MatrixHolder\";\nimport X4MatrixHolder from \"./X4MatrixHolder\";\nimport Web3 from \"web3\";\nimport { ABI, ADDRESS } from \"../../utils/globals\";\nimport { loadWeb3 } from \"../../utils/utility\";\n\nclass MatrixSystem extends Component {\n  async UNSAFE_componentWillMount() {\n    try {\n      this.setState({\n        account: this.props.account\n      });\n      await loadWeb3();\n      await this.loadBlockchainData();\n      this.loadX3();\n      this.loadX4();\n    } catch (err) {\n      window.alert(\"Something went wrong.. Check: \" + err);\n    }\n  }\n\n  async loadBlockchainData() {\n    try {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      const contract = new web3.eth.Contract(ABI, ADDRESS);\n      this.setState({\n        contract\n      });\n      const costs = await contract.methods.registrationCost().call();\n      this.setState({\n        cost: costs\n      }); // Matrix Calls for the X3\n      // Matrix Calls for the X4\n    } catch (err) {\n      window.alert(\"Something went wrong.. Check: \" + err);\n    }\n  }\n\n  async loadX3() {\n    const contract = this.state.contact;\n    const x3 = [];\n\n    for (let i = 1; i < 13; i++) {\n      const res = await contract.methods.usersX3Matrix(this.state.account, i).call();\n      x3.push({\n        level: i,\n        userX3: res\n      });\n    }\n\n    const elementsX3 = [];\n\n    var _cost = this.state.cost / 2;\n\n    for (let i = 0; i < 12; i++) {\n      let j = i + 1;\n      const downlines = x3[i].userX3[1].length;\n      elementsX3.push({\n        id: j,\n        number: downlines,\n        key: j,\n        cost: _cost\n      });\n      _cost = _cost * 2;\n    }\n\n    const x3Exist = [];\n\n    for (let i = 1; i < 13; i++) {\n      const res = await contract.methods.usersActiveX3Levels(this.state.account, i).call();\n      x3Exist.push({\n        id: i,\n        userX3Exist: res\n      });\n    }\n\n    const x3Payload = this.x3Infos(x3Exist, elementsX3);\n    this.setState({\n      x3Payload\n    });\n  }\n\n  async loadX4() {\n    const contract = this.state.contact;\n\n    var _x4cost = this.state.cost / 2;\n\n    const x4Exist = [];\n\n    for (let i = 1; i < 13; i++) {\n      const res = await contract.methods.usersActiveX6Levels(this.state.account, i).call();\n      x4Exist.push({\n        id: i,\n        userX4Exist: res,\n        key: i,\n        cost: _x4cost\n      });\n      _x4cost = _x4cost * 2;\n    }\n\n    const x6 = [];\n\n    for (let i = 1; i < 13; i++) {\n      const res = await contract.methods.usersX6Matrix(this.state.account, i).call();\n      x6.push({\n        id: i,\n        userX6: res\n      });\n    }\n\n    const x6Payload = this.x3Infos(x4Exist, x6);\n    this.setState({\n      x6Payload\n    });\n  } // Merging X3 quereries into 1 Payload\n\n\n  x3Infos(arr1, arr2) {\n    return arr1.map((item, i) => {\n      if (item.id === arr2[i].id) {\n        return Object.assign({}, item, arr2[i]);\n      }\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      parnterCount: \"\",\n      cost: \"\"\n    };\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(X3MatrixHolder, {\n      struc: this.state.x3Payload,\n      account: this.state.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), __jsx(X4MatrixHolder, {\n      struc: this.state.x6Payload,\n      account: this.state.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default MatrixSystem;","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/components/matrix/MatrixSystem.jsx"],"names":["React","Component","X3MatrixHolder","X4MatrixHolder","Web3","ABI","ADDRESS","loadWeb3","MatrixSystem","UNSAFE_componentWillMount","setState","account","props","loadBlockchainData","loadX3","loadX4","err","window","alert","web3","givenProvider","contract","eth","Contract","costs","methods","registrationCost","call","cost","state","contact","x3","i","res","usersX3Matrix","push","level","userX3","elementsX3","_cost","j","downlines","length","id","number","key","x3Exist","usersActiveX3Levels","userX3Exist","x3Payload","x3Infos","_x4cost","x4Exist","usersActiveX6Levels","userX4Exist","x6","usersX6Matrix","userX6","x6Payload","arr1","arr2","map","item","Object","assign","constructor","parnterCount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport X3MatrixHolder from \"./X3MatrixHolder\";\r\nimport X4MatrixHolder from \"./X4MatrixHolder\";\r\nimport Web3 from \"web3\";\r\nimport { ABI, ADDRESS } from \"../../utils/globals\";\r\nimport { loadWeb3 } from \"../../utils/utility\";\r\n\r\nclass MatrixSystem extends Component {\r\n  async UNSAFE_componentWillMount() {\r\n    try {\r\n      this.setState({ account: this.props.account });\r\n      await loadWeb3();\r\n      await this.loadBlockchainData();\r\n      this.loadX3();\r\n      this.loadX4();\r\n    } catch (err) {\r\n      window.alert(\"Something went wrong.. Check: \" + err);\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    try {\r\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n      const contract = new web3.eth.Contract(ABI, ADDRESS);\r\n      this.setState({ contract });\r\n\r\n      const costs = await contract.methods.registrationCost().call();\r\n      this.setState({ cost: costs });\r\n\r\n      // Matrix Calls for the X3\r\n\r\n      // Matrix Calls for the X4\r\n    } catch (err) {\r\n      window.alert(\"Something went wrong.. Check: \" + err);\r\n    }\r\n  }\r\n\r\n  async loadX3() {\r\n    const contract = this.state.contact;\r\n    const x3 = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersX3Matrix(this.state.account, i)\r\n        .call();\r\n      x3.push({\r\n        level: i,\r\n        userX3: res,\r\n      });\r\n    }\r\n    const elementsX3 = [];\r\n    var _cost = this.state.cost / 2;\r\n    for (let i = 0; i < 12; i++) {\r\n      let j = i + 1;\r\n\r\n      const downlines = x3[i].userX3[1].length;\r\n      elementsX3.push({\r\n        id: j,\r\n        number: downlines,\r\n        key: j,\r\n        cost: _cost,\r\n      });\r\n      _cost = _cost * 2;\r\n    }\r\n    const x3Exist = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersActiveX3Levels(this.state.account, i)\r\n        .call();\r\n      x3Exist.push({\r\n        id: i,\r\n        userX3Exist: res,\r\n      });\r\n    }\r\n    const x3Payload = this.x3Infos(x3Exist, elementsX3);\r\n    this.setState({ x3Payload });\r\n  }\r\n\r\n  async loadX4() {\r\n    const contract = this.state.contact;\r\n    var _x4cost = this.state.cost / 2;\r\n    const x4Exist = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersActiveX6Levels(this.state.account, i)\r\n        .call();\r\n      x4Exist.push({\r\n        id: i,\r\n        userX4Exist: res,\r\n        key: i,\r\n        cost: _x4cost,\r\n      });\r\n      _x4cost = _x4cost * 2;\r\n    }\r\n    const x6 = [];\r\n    for (let i = 1; i < 13; i++) {\r\n      const res = await contract.methods\r\n        .usersX6Matrix(this.state.account, i)\r\n        .call();\r\n      x6.push({\r\n        id: i,\r\n        userX6: res,\r\n      });\r\n    }\r\n\r\n    const x6Payload = this.x3Infos(x4Exist, x6);\r\n    this.setState({ x6Payload });\r\n  }\r\n\r\n  // Merging X3 quereries into 1 Payload\r\n  x3Infos(arr1, arr2) {\r\n    return arr1.map((item, i) => {\r\n      if (item.id === arr2[i].id) {\r\n        return Object.assign({}, item, arr2[i]);\r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      parnterCount: \"\",\r\n      cost: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <X3MatrixHolder\r\n          struc={this.state.x3Payload}\r\n          account={this.state.account}\r\n        />\r\n        <X4MatrixHolder\r\n          struc={this.state.x6Payload}\r\n          account={this.state.account}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MatrixSystem;\r\n"]},"metadata":{},"sourceType":"module"}