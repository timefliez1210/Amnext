{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crfab\\\\Desktop\\\\forsage-boilerplate\\\\components\\\\login\\\\ManualLogin.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport AccountContext from \"../AccountContext\";\nimport { ABI, ADDRESS } from \"../../ethereum/web3\";\nimport Web3 from \"web3\";\n\nclass ManualLogin extends Component {\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const contract = new web3.eth.Contract(ABI, ADDRESS);\n    this.setState({\n      contract\n    });\n    const isExists = await contract.methods.isUserExists(this.state.account).call().catch(err => {\n      console.log(\"Something went wrong\");\n    });\n    this.setState({\n      isExist: isExists\n    });\n    const costs = await contract.methods.registrationCost().call();\n    this.setState({\n      cost: costs\n    });\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  }\n\n  async login() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n\n    if (isExist) {\n      console.log(isExist);\n    } else {\n      window.alert(\"The user you are looking for doesn't exist. Try another one!\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      isExist: false,\n      cost: \"\"\n    };\n  }\n\n  render() {\n    const {\n      account,\n      setAccount\n    } = this.context;\n    return __jsx(React.Fragment, null, __jsx(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const newUser = this.state.account;\n        setAccount(newUser);\n        console.log(this.context);\n        this.login();\n      } // onSubmit={async (event) => {\n      //   event.preventDefault();\n      //   await this.register(this.state.refererAddress);\n      //   const newUser = this.state.account;\n      //   setAccount(newUser);\n      // }}\n      ,\n      className: \"jsx-901526722\" + \" \" + \"manual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        const address = this.input.value.toString();\n        this.setState({\n          account: address\n        });\n      },\n      ref: input => {\n        this.input = input;\n      },\n      placeholder: \"Wallet Address or ID...\",\n      className: \"jsx-901526722\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), __jsx(\"button\", {\n      className: \"jsx-901526722\" + \" \" + \"manual-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(\"b\", {\n      className: \"jsx-901526722\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Viewing\"))), __jsx(_JSXStyle, {\n      id: \"901526722\",\n      __self: this\n    }, \".manual-btn.jsx-901526722{background:rgb(55,214,255);background:linear-gradient( 223deg, rgba(55,214,255,1) 0%, rgba(16,83,245,1) 46% );box-shadow:none;outline:none;border:none;}input.jsx-901526722{width:100%;background:rgba(16,1,62,1);box-shadow:none;outline:none;border:none;padding:20px 20px;border-radius:30px;font-size:1.2em;margin:30px 0;color:grey;}button.jsx-901526722{width:100%;text-align:center;padding:20px 0;border-radius:30px;color:white;font-size:1.2em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY3JmYWJcXERlc2t0b3BcXGZvcnNhZ2UtYm9pbGVycGxhdGVcXGNvbXBvbmVudHNcXGxvZ2luXFxNYW51YWxMb2dpbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUdvQixBQUcwQyxBQVdsQixBQWFBLFdBWm1CLEFBYVosZ0JBcEJqQixFQXFCYyxTQWJDLE1BY0csVUFiTixTQWNELElBYkEsUUFjSSxJQWJFLFlBY3BCLE1BYnFCLGFBWEgsTUFZQSxVQVhILE1BWUMsT0FYRixPQVlELEtBWGIsTUFZQSIsImZpbGUiOiJDOlxcVXNlcnNcXGNyZmFiXFxEZXNrdG9wXFxmb3JzYWdlLWJvaWxlcnBsYXRlXFxjb21wb25lbnRzXFxsb2dpblxcTWFudWFsTG9naW4uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgQWNjb3VudENvbnRleHQgZnJvbSBcIi4uL0FjY291bnRDb250ZXh0XCI7XHJcbmltcG9ydCB7IEFCSSwgQUREUkVTUyB9IGZyb20gXCIuLi8uLi9ldGhlcmV1bS93ZWIzXCI7XHJcbmltcG9ydCBXZWIzIGZyb20gXCJ3ZWIzXCI7XHJcblxyXG5jbGFzcyBNYW51YWxMb2dpbiBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgc3RhdGljIGNvbnRleHRUeXBlID0gQWNjb3VudENvbnRleHQ7XHJcblxyXG4gIGFzeW5jIGxvYWRCbG9ja2NoYWluRGF0YSgpIHtcclxuICAgIGNvbnN0IHdlYjMgPSBuZXcgV2ViMyhXZWIzLmdpdmVuUHJvdmlkZXIgfHwgXCJodHRwOi8vbG9jYWxob3N0Ojg1NDVcIik7XHJcbiAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdlYjMuZXRoLmdldEFjY291bnRzKCk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgYWNjb3VudDogYWNjb3VudHNbMF0gfSk7XHJcblxyXG4gICAgY29uc3QgY29udHJhY3QgPSBuZXcgd2ViMy5ldGguQ29udHJhY3QoQUJJLCBBRERSRVNTKTtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBjb250cmFjdCB9KTtcclxuICAgIGNvbnN0IGlzRXhpc3RzID0gYXdhaXQgY29udHJhY3QubWV0aG9kc1xyXG4gICAgICAuaXNVc2VyRXhpc3RzKHRoaXMuc3RhdGUuYWNjb3VudClcclxuICAgICAgLmNhbGwoKVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3JvbmdcIik7XHJcbiAgICAgIH0pO1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IGlzRXhpc3Q6IGlzRXhpc3RzIH0pO1xyXG4gICAgY29uc3QgY29zdHMgPSBhd2FpdCBjb250cmFjdC5tZXRob2RzLnJlZ2lzdHJhdGlvbkNvc3QoKS5jYWxsKCk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgY29zdDogY29zdHMgfSk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgaXNMb2FkaW5nOiBmYWxzZSB9KTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGxvYWRXZWIzKCkge1xyXG4gICAgaWYgKHdpbmRvdy5ldGhlcmV1bSkge1xyXG4gICAgICB3aW5kb3cud2ViMyA9IG5ldyBXZWIzKHdpbmRvdy5ldGhlcmV1bSk7XHJcbiAgICAgIGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5lbmFibGUoKTtcclxuICAgIH0gZWxzZSBpZiAod2luZG93LndlYjMpIHtcclxuICAgICAgd2luZG93LndlYjMgPSBuZXcgV2ViMyh3aW5kb3cud2ViMy5jdXJyZW50UHJvdmlkZXIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgd2luZG93LmFsZXJ0KFxyXG4gICAgICAgIFwiTm9uLUV0aGVyZXVtIGJyb3dzZXIgZGV0ZWN0ZWQuIFlvdSBzaG91bGQgY29uc2lkZXIgdHJ5aW5nIE1ldGFNYXNrIVwiXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyBsb2dpbigpIHtcclxuICAgIGF3YWl0IHRoaXMubG9hZFdlYjMoKTtcclxuICAgIGF3YWl0IHRoaXMubG9hZEJsb2NrY2hhaW5EYXRhKCk7XHJcbiAgICBpZiAoaXNFeGlzdCkge1xyXG4gICAgICBjb25zb2xlLmxvZyhpc0V4aXN0KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHdpbmRvdy5hbGVydChcclxuICAgICAgICBcIlRoZSB1c2VyIHlvdSBhcmUgbG9va2luZyBmb3IgZG9lc24ndCBleGlzdC4gVHJ5IGFub3RoZXIgb25lIVwiXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgYWNjb3VudDogXCJcIixcclxuICAgICAgaXNFeGlzdDogZmFsc2UsXHJcbiAgICAgIGNvc3Q6IFwiXCIsXHJcbiAgICB9O1xyXG4gIH1cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zdCB7IGFjY291bnQsIHNldEFjY291bnQgfSA9IHRoaXMuY29udGV4dDtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDw+XHJcbiAgICAgICAgPGZvcm1cclxuICAgICAgICAgIGNsYXNzTmFtZT1cIm1hbnVhbFwiXHJcbiAgICAgICAgICBvblN1Ym1pdD17YXN5bmMgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1VzZXIgPSB0aGlzLnN0YXRlLmFjY291bnQ7XHJcbiAgICAgICAgICAgIHNldEFjY291bnQobmV3VXNlcik7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29udGV4dCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9naW4oKTtcclxuICAgICAgICAgIH19XHJcbiAgICAgICAgICAvLyBvblN1Ym1pdD17YXN5bmMgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAvLyAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAvLyAgIGF3YWl0IHRoaXMucmVnaXN0ZXIodGhpcy5zdGF0ZS5yZWZlcmVyQWRkcmVzcyk7XHJcbiAgICAgICAgICAvLyAgIGNvbnN0IG5ld1VzZXIgPSB0aGlzLnN0YXRlLmFjY291bnQ7XHJcbiAgICAgICAgICAvLyAgIHNldEFjY291bnQobmV3VXNlcik7XHJcbiAgICAgICAgICAvLyB9fVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICBjb25zdCBhZGRyZXNzID0gdGhpcy5pbnB1dC52YWx1ZS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICAgICAgYWNjb3VudDogYWRkcmVzcyxcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgcmVmPXsoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgICB0aGlzLmlucHV0ID0gaW5wdXQ7XHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiV2FsbGV0IEFkZHJlc3Mgb3IgSUQuLi5cIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwibWFudWFsLWJ0blwiPlxyXG4gICAgICAgICAgICA8Yj5WaWV3aW5nPC9iPlxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgIC5tYW51YWwtYnRuIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiKDU1LCAyMTQsIDI1NSk7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgICAgICAyMjNkZWcsXHJcbiAgICAgICAgICAgICAgcmdiYSg1NSwgMjE0LCAyNTUsIDEpIDAlLFxyXG4gICAgICAgICAgICAgIHJnYmEoMTYsIDgzLCAyNDUsIDEpIDQ2JVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpbnB1dCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDE2LCAxLCA2MiwgMSk7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweCAyMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgICAgICBtYXJnaW46IDMwcHggMDtcclxuICAgICAgICAgICAgY29sb3I6IGdyZXk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgYnV0dG9uIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweCAwO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICA8Lz5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNYW51YWxMb2dpbjtcclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\crfab\\\\\\\\Desktop\\\\\\\\forsage-boilerplate\\\\\\\\components\\\\\\\\login\\\\\\\\ManualLogin.jsx */\"));\n  }\n\n}\n\n_defineProperty(ManualLogin, \"contextType\", AccountContext);\n\nexport default ManualLogin;","map":{"version":3,"sources":["C:/Users/crfab/Desktop/forsage-boilerplate/components/login/ManualLogin.jsx"],"names":["React","Component","AccountContext","ABI","ADDRESS","Web3","ManualLogin","loadBlockchainData","web3","givenProvider","accounts","eth","getAccounts","setState","account","contract","Contract","isExists","methods","isUserExists","state","call","catch","err","console","log","isExist","costs","registrationCost","cost","isLoading","loadWeb3","window","ethereum","enable","currentProvider","alert","login","constructor","props","render","setAccount","context","event","preventDefault","newUser","address","input","value","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AccountContext from \"../AccountContext\";\r\nimport { ABI, ADDRESS } from \"../../ethereum/web3\";\r\nimport Web3 from \"web3\";\r\n\r\nclass ManualLogin extends Component {\r\n  static contextType = AccountContext;\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n    const accounts = await web3.eth.getAccounts();\r\n    this.setState({ account: accounts[0] });\r\n\r\n    const contract = new web3.eth.Contract(ABI, ADDRESS);\r\n    this.setState({ contract });\r\n    const isExists = await contract.methods\r\n      .isUserExists(this.state.account)\r\n      .call()\r\n      .catch((err) => {\r\n        console.log(\"Something went wrong\");\r\n      });\r\n    this.setState({ isExist: isExists });\r\n    const costs = await contract.methods.registrationCost().call();\r\n    this.setState({ cost: costs });\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async login() {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n    if (isExist) {\r\n      console.log(isExist);\r\n    } else {\r\n      window.alert(\r\n        \"The user you are looking for doesn't exist. Try another one!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      isExist: false,\r\n      cost: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    const { account, setAccount } = this.context;\r\n    return (\r\n      <>\r\n        <form\r\n          className=\"manual\"\r\n          onSubmit={async (event) => {\r\n            event.preventDefault();\r\n            const newUser = this.state.account;\r\n            setAccount(newUser);\r\n            console.log(this.context);\r\n            this.login();\r\n          }}\r\n          // onSubmit={async (event) => {\r\n          //   event.preventDefault();\r\n          //   await this.register(this.state.refererAddress);\r\n          //   const newUser = this.state.account;\r\n          //   setAccount(newUser);\r\n          // }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const address = this.input.value.toString();\r\n              this.setState({\r\n                account: address,\r\n              });\r\n            }}\r\n            ref={(input) => {\r\n              this.input = input;\r\n            }}\r\n            placeholder=\"Wallet Address or ID...\"\r\n          />\r\n          <button className=\"manual-btn\">\r\n            <b>Viewing</b>\r\n          </button>\r\n        </form>\r\n        <style jsx>{`\r\n          .manual-btn {\r\n            background: rgb(55, 214, 255);\r\n            background: linear-gradient(\r\n              223deg,\r\n              rgba(55, 214, 255, 1) 0%,\r\n              rgba(16, 83, 245, 1) 46%\r\n            );\r\n            box-shadow: none;\r\n            outline: none;\r\n            border: none;\r\n          }\r\n          input {\r\n            width: 100%;\r\n            background: rgba(16, 1, 62, 1);\r\n            box-shadow: none;\r\n            outline: none;\r\n            border: none;\r\n            padding: 20px 20px;\r\n            border-radius: 30px;\r\n            font-size: 1.2em;\r\n            margin: 30px 0;\r\n            color: grey;\r\n          }\r\n\r\n          button {\r\n            width: 100%;\r\n            text-align: center;\r\n            padding: 20px 0;\r\n            border-radius: 30px;\r\n            color: white;\r\n            font-size: 1.2em;\r\n          }\r\n        `}</style>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManualLogin;\r\n"]},"metadata":{},"sourceType":"module"}